// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: srvRes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lspb {

  /// <summary>Holder for reflection information generated from srvRes.proto</summary>
  public static partial class SrvResReflection {

    #region Descriptor
    /// <summary>File descriptor for srvRes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SrvResReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzcnZSZXMucHJvdG8SBGxzcGIaDGxzRW51bS5wcm90bxoPZ2FtZVByb3Rv",
            "LnByb3RvIp8CCgZTcnZSZXMSIgoIbWV0aG9kSWQYASABKA4yEC5sc3BiLlNy",
            "dk1zZ1R5cGUSHAoGcmVzdWx0GAIgASgOMgwubHNwYi5SZXN1bHQSDgoGZXJy",
            "U3RyGAMgASgJEigKDHNydkVudGVyUm9vbRhlIAEoCzISLmxzcGIuU3J2RW50",
            "ZXJSb29tEiYKC3NydkluaXRPdmVyGGYgASgLMhEubHNwYi5TcnZJbml0T3Zl",
            "chIjCgliR2FtZUluaXQY6QcgASgLMg8ubHNwYi5CR2FtZUluaXQSJQoKYkdh",
            "bWVTdGFydBjqByABKAsyEC5sc3BiLkJHYW1lU3RhcnQSJQoKYkdhbWVGcmFt",
            "ZRjrByABKAsyEC5sc3BiLkJHYW1lRnJhbWUqdgoKU3J2TXNnVHlwZRITCg9l",
            "cnJvckNsaWVudFR5cGUQABIQCgxzcnZFbnRlclJvb20QZRIPCgtzcnZJbml0",
            "T3ZlchBmEg4KCWJHYW1lSW5pdBDpBxIPCgpiR2FtZVN0YXJ0EOoHEg8KCmJH",
            "YW1lRnJhbWUQ6wdCEgoQb3JnLmJyby5sc3Nydi5wYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lspb.LsEnumReflection.Descriptor, global::Lspb.GameProtoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Lspb.SrvMsgType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lspb.SrvRes), global::Lspb.SrvRes.Parser, new[]{ "MethodId", "Result", "ErrStr", "SrvEnterRoom", "SrvInitOver", "BGameInit", "BGameStart", "BGameFrame" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SrvMsgType {
    /// <summary>
    ///* default 
    /// </summary>
    [pbr::OriginalName("errorClientType")] ErrorClientType = 0,
    /// <summary>
    ///* 进入游戏 
    /// </summary>
    [pbr::OriginalName("srvEnterRoom")] SrvEnterRoom = 101,
    /// <summary>
    ///* 初始化完成ACK 
    /// </summary>
    [pbr::OriginalName("srvInitOver")] SrvInitOver = 102,
    /// <summary>
    ///* 房间初始化 
    /// </summary>
    [pbr::OriginalName("bGameInit")] BGameInit = 1001,
    /// <summary>
    ///* 游戏正式开始推送 
    /// </summary>
    [pbr::OriginalName("bGameStart")] BGameStart = 1002,
    /// <summary>
    ///* 游戏逻辑帧操作 
    /// </summary>
    [pbr::OriginalName("bGameFrame")] BGameFrame = 1003,
  }

  #endregion

  #region Messages
  /// <summary>
  ///* 所有下行请求都是serverResponse，服务器会传递具体内容的标示methodId，客户端根据methodId进行处理 
  /// </summary>
  public sealed partial class SrvRes : pb::IMessage<SrvRes> {
    private static readonly pb::MessageParser<SrvRes> _parser = new pb::MessageParser<SrvRes>(() => new SrvRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SrvRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lspb.SrvResReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SrvRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SrvRes(SrvRes other) : this() {
      methodId_ = other.methodId_;
      result_ = other.result_;
      errStr_ = other.errStr_;
      SrvEnterRoom = other.srvEnterRoom_ != null ? other.SrvEnterRoom.Clone() : null;
      SrvInitOver = other.srvInitOver_ != null ? other.SrvInitOver.Clone() : null;
      BGameInit = other.bGameInit_ != null ? other.BGameInit.Clone() : null;
      BGameStart = other.bGameStart_ != null ? other.BGameStart.Clone() : null;
      BGameFrame = other.bGameFrame_ != null ? other.BGameFrame.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SrvRes Clone() {
      return new SrvRes(this);
    }

    /// <summary>Field number for the "methodId" field.</summary>
    public const int MethodIdFieldNumber = 1;
    private global::Lspb.SrvMsgType methodId_ = 0;
    /// <summary>
    ///* 返回方法名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.SrvMsgType MethodId {
      get { return methodId_; }
      set {
        methodId_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Lspb.Result result_ = 0;
    /// <summary>
    ///* 返回码，包含success和错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "errStr" field.</summary>
    public const int ErrStrFieldNumber = 3;
    private string errStr_ = "";
    /// <summary>
    ///* 错误展示字段，如果result不为0，则取该字段给用户展示 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrStr {
      get { return errStr_; }
      set {
        errStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "srvEnterRoom" field.</summary>
    public const int SrvEnterRoomFieldNumber = 101;
    private global::Lspb.SrvEnterRoom srvEnterRoom_;
    /// <summary>
    ///* 玩家进入房间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.SrvEnterRoom SrvEnterRoom {
      get { return srvEnterRoom_; }
      set {
        srvEnterRoom_ = value;
      }
    }

    /// <summary>Field number for the "srvInitOver" field.</summary>
    public const int SrvInitOverFieldNumber = 102;
    private global::Lspb.SrvInitOver srvInitOver_;
    /// <summary>
    ///* 初始化完成ACK 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.SrvInitOver SrvInitOver {
      get { return srvInitOver_; }
      set {
        srvInitOver_ = value;
      }
    }

    /// <summary>Field number for the "bGameInit" field.</summary>
    public const int BGameInitFieldNumber = 1001;
    private global::Lspb.BGameInit bGameInit_;
    /// <summary>
    ///* 游戏初始化信息 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.BGameInit BGameInit {
      get { return bGameInit_; }
      set {
        bGameInit_ = value;
      }
    }

    /// <summary>Field number for the "bGameStart" field.</summary>
    public const int BGameStartFieldNumber = 1002;
    private global::Lspb.BGameStart bGameStart_;
    /// <summary>
    ///* 游戏正式开始推送 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.BGameStart BGameStart {
      get { return bGameStart_; }
      set {
        bGameStart_ = value;
      }
    }

    /// <summary>Field number for the "bGameFrame" field.</summary>
    public const int BGameFrameFieldNumber = 1003;
    private global::Lspb.BGameFrame bGameFrame_;
    /// <summary>
    ///* 游戏逻辑帧操作 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.BGameFrame BGameFrame {
      get { return bGameFrame_; }
      set {
        bGameFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SrvRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SrvRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodId != other.MethodId) return false;
      if (Result != other.Result) return false;
      if (ErrStr != other.ErrStr) return false;
      if (!object.Equals(SrvEnterRoom, other.SrvEnterRoom)) return false;
      if (!object.Equals(SrvInitOver, other.SrvInitOver)) return false;
      if (!object.Equals(BGameInit, other.BGameInit)) return false;
      if (!object.Equals(BGameStart, other.BGameStart)) return false;
      if (!object.Equals(BGameFrame, other.BGameFrame)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodId != 0) hash ^= MethodId.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ErrStr.Length != 0) hash ^= ErrStr.GetHashCode();
      if (srvEnterRoom_ != null) hash ^= SrvEnterRoom.GetHashCode();
      if (srvInitOver_ != null) hash ^= SrvInitOver.GetHashCode();
      if (bGameInit_ != null) hash ^= BGameInit.GetHashCode();
      if (bGameStart_ != null) hash ^= BGameStart.GetHashCode();
      if (bGameFrame_ != null) hash ^= BGameFrame.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MethodId);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (ErrStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrStr);
      }
      if (srvEnterRoom_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(SrvEnterRoom);
      }
      if (srvInitOver_ != null) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(SrvInitOver);
      }
      if (bGameInit_ != null) {
        output.WriteRawTag(202, 62);
        output.WriteMessage(BGameInit);
      }
      if (bGameStart_ != null) {
        output.WriteRawTag(210, 62);
        output.WriteMessage(BGameStart);
      }
      if (bGameFrame_ != null) {
        output.WriteRawTag(218, 62);
        output.WriteMessage(BGameFrame);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MethodId);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ErrStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrStr);
      }
      if (srvEnterRoom_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SrvEnterRoom);
      }
      if (srvInitOver_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SrvInitOver);
      }
      if (bGameInit_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BGameInit);
      }
      if (bGameStart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BGameStart);
      }
      if (bGameFrame_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BGameFrame);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SrvRes other) {
      if (other == null) {
        return;
      }
      if (other.MethodId != 0) {
        MethodId = other.MethodId;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ErrStr.Length != 0) {
        ErrStr = other.ErrStr;
      }
      if (other.srvEnterRoom_ != null) {
        if (srvEnterRoom_ == null) {
          srvEnterRoom_ = new global::Lspb.SrvEnterRoom();
        }
        SrvEnterRoom.MergeFrom(other.SrvEnterRoom);
      }
      if (other.srvInitOver_ != null) {
        if (srvInitOver_ == null) {
          srvInitOver_ = new global::Lspb.SrvInitOver();
        }
        SrvInitOver.MergeFrom(other.SrvInitOver);
      }
      if (other.bGameInit_ != null) {
        if (bGameInit_ == null) {
          bGameInit_ = new global::Lspb.BGameInit();
        }
        BGameInit.MergeFrom(other.BGameInit);
      }
      if (other.bGameStart_ != null) {
        if (bGameStart_ == null) {
          bGameStart_ = new global::Lspb.BGameStart();
        }
        BGameStart.MergeFrom(other.BGameStart);
      }
      if (other.bGameFrame_ != null) {
        if (bGameFrame_ == null) {
          bGameFrame_ = new global::Lspb.BGameFrame();
        }
        BGameFrame.MergeFrom(other.BGameFrame);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            methodId_ = (global::Lspb.SrvMsgType) input.ReadEnum();
            break;
          }
          case 16: {
            result_ = (global::Lspb.Result) input.ReadEnum();
            break;
          }
          case 26: {
            ErrStr = input.ReadString();
            break;
          }
          case 810: {
            if (srvEnterRoom_ == null) {
              srvEnterRoom_ = new global::Lspb.SrvEnterRoom();
            }
            input.ReadMessage(srvEnterRoom_);
            break;
          }
          case 818: {
            if (srvInitOver_ == null) {
              srvInitOver_ = new global::Lspb.SrvInitOver();
            }
            input.ReadMessage(srvInitOver_);
            break;
          }
          case 8010: {
            if (bGameInit_ == null) {
              bGameInit_ = new global::Lspb.BGameInit();
            }
            input.ReadMessage(bGameInit_);
            break;
          }
          case 8018: {
            if (bGameStart_ == null) {
              bGameStart_ = new global::Lspb.BGameStart();
            }
            input.ReadMessage(bGameStart_);
            break;
          }
          case 8026: {
            if (bGameFrame_ == null) {
              bGameFrame_ = new global::Lspb.BGameFrame();
            }
            input.ReadMessage(bGameFrame_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
